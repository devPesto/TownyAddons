plugins {
    id "java"
    id "io.github.goooler.shadow" version "8.1.8"
}

group = "io.github.devPesto"
version = "1.0.0"

repositories {
    mavenCentral()
    maven { url = "https://repo.papermc.io/repository/maven-public/" }
    maven { url = "https://oss.sonatype.org/content/groups/public/" }
    maven { url = "https://jitpack.io" }
    maven { url = "https://repo.glaremasters.me/repository/towny/" }
    maven { url = "https://repo.triumphteam.dev/snapshots/" }
    maven { url = "https://repo.mikeprimm.com/" }
    maven { url = "https://repo.lunarclient.dev" }
    maven { url = "https://repo.dmulloy2.net/repository/public/" }
}

dependencies {
    annotationProcessor "org.projectlombok:lombok:1.18.34"
    compileOnly "io.papermc.paper:paper-api:1.20.6-R0.1-SNAPSHOT"
    compileOnly "com.palmergames.bukkit.towny:towny:0.100.3.0"
    compileOnly "com.github.TownyAdvanced:SiegeWar:2.12.0"
    compileOnly 'com.lunarclient:apollo-api:1.1.4'
    compileOnly 'com.comphenix.protocol:ProtocolLib:5.1.0'
    compileOnly "org.projectlombok:lombok:1.18.34"
    implementation "dev.dejvokep:boosted-yaml:1.3.6"
    implementation "com.github.Revxrsal.Lamp:common:3.2.1"
    implementation "com.github.Revxrsal.Lamp:bukkit:3.2.1"
}

compileJava {
    options.compilerArgs += ["-parameters"]
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset "UTF-8"
    filesMatching("plugin.yml") {
        expand props
    }
}

shadowJar {
    setArchiveFileName("${rootProject.name}-${version}.jar")
}

build {
    dependsOn(shadowJar)
}
